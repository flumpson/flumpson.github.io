{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"get",
				"getQuote"
			],
			[
				"h",
				"h1\tTag"
			],
			[
				"on",
				"ontology"
			],
			[
				"service",
				"serviceUri"
			],
			[
				"A",
				"AnswerSetExportOntology"
			],
			[
				"spar",
				"sparqlArgs"
			],
			[
				"in",
				"info"
			],
			[
				"enro",
				"enrollment_location_id"
			],
			[
				"setting",
				"settings"
			],
			[
				"M",
				"METADATA"
			],
			[
				"OUT",
				"OUTPUTFILE"
			],
			[
				"name",
				"namegraphuri"
			],
			[
				"backup",
				"backupName"
			],
			[
				"s",
				"s3path"
			],
			[
				"s3bac",
				"s3backupontology"
			],
			[
				"de",
				"delete_template"
			],
			[
				"re",
				"register_replace"
			],
			[
				"T",
				"TEMPLATE_SERVICE_TRIG"
			],
			[
				"Dataset",
				"DatasetListenerService"
			],
			[
				"DatasetList",
				"datasetListener"
			],
			[
				"ou",
				"output_name"
			],
			[
				"dir",
				"dir_path"
			],
			[
				"di",
				"dir_list"
			],
			[
				"path",
				"path_list"
			],
			[
				"fi",
				"file1_line"
			],
			[
				"file",
				"file2_line"
			],
			[
				"fil",
				"file1_line"
			],
			[
				"L",
				"LDAP_KEY"
			],
			[
				"LDAP_",
				"LDAP_VAL"
			],
			[
				"ser",
				"SERVERPATH"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "{\n\t\"folders\":\n\t[\n\t\t{\n\t\t\t\"path\": \".\"\n\t\t}\n\t]\n}\n",
			"file": "omnicoach-site.sublime-project",
			"file_size": 45,
			"file_write_time": 131458157940000000,
			"settings":
			{
				"buffer_size": 45,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 187.0,
		"last_filter": "inden",
		"selected_items":
		[
			[
				"inden",
				"Indentation: Reindent Lines"
			],
			[
				"indent",
				"Indentation: Reindent Lines"
			],
			[
				"indend",
				"Indentation: Reindent Lines"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"space",
				"Indentation: Convert to Spaces"
			],
			[
				"indeent",
				"Indentation: Reindent Lines"
			],
			[
				"install p",
				"Package Control: Install Package"
			],
			[
				"trig",
				"Package Control: Install Package"
			],
			[
				"set syntax bash",
				"Set Syntax: Shell Script (Bash)"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/ryan/personalGit/omnicoach-site"
	],
	"file_history":
	[
		"/Users/ryan/git/merck-mdr/com.merck.mdr.application/app/components/csi-merck-metadata-maintenance-edit-form-item/csi-merck-metadata-maintenance-edit-form-item.html",
		"/Users/ryan/git/merck-mdr/com.merck.mdr.application/app/components/csi-merck-metadata-maintenance-edit-form/csi-merck-metadata-maintenance-edit-form.html",
		"/Users/ryan/git/merck-mdr/com.merck.mdr.application/app/config/csi-merck-metadata-management-edit-form/form-scope-select2-config.json",
		"/Users/ryan/Desktop/tasks/merck-mdr/html temp files/untitled.html",
		"/Users/ryan/git/merck-mdr/com.merck.mdr.application/app/components/csi-merck-metadata-maintenance-edit/csi-merck-metadata-maintenance-edit-impl.js",
		"/Users/ryan/git/merck-mdr/com.merck.mdr.application/app/components/csi-merck-metadata-maintenance-edit-form-section/csi-merck-metadata-maintenance-edit-form-section.html",
		"/Users/ryan/git/merck-mdr/com.merck.mdr.application/app/lib/vocab/trial-metadata-base.js",
		"/Users/ryan/git/merck-mdr/com.merck.mdr.application/app/components/csi-merck-metadata-maintenance-edit-rm2-dataset/csi-merck-metadata-maintenance-edit-rm2-dataset-impl.js",
		"/Users/ryan/Desktop/lastpass_backup-july-7th-2017.csv",
		"/Users/ryan/Desktop/complete_lastpass_backup.csv",
		"/Users/ryan/git/merck-mdr/com.merck.mdr.application/app/components/csi-merck-metadata-maintenance-edit/csi-merck-metadata-maintenance-edit.html",
		"/Users/ryan/git/merck-mdr/com.merck.mdr.application/app/config/csi-merck-metadata-maintenance-search/object-type-filter-select2-config.json",
		"/Users/ryan/git/merck-mdr/com.merck.mdr.application/app/config/csi-merck-metadata-maintenance-search/metadata-search-related-objects-table.json",
		"/Users/ryan/git/merck-mdr/com.merck.mdr.application/OSGI-INF/registry-data/everyoneRead/components.trig",
		"/Users/ryan/git/merck-mdr/com.merck.mdr.config.dev.basic/scripts/retrieveFromUat.sh",
		"/Users/ryan/git/merck-mdr/com.merck.mdr.application/app/components/csi-merck-home/csi-merck-home.html",
		"/Users/ryan/git/merck-mdr/com.merck.mdr.application/app/components/test-widget/csi-merck-home.html",
		"/Users/ryan/git/merck-mdr/com.merck.mdr.application/app/custom_polymer_components/merck-theme.html",
		"/Users/ryan/git/merck-mdr/com.merck.mdr.application/app/components/csi-merck-app/configs/csi-merck-app-router-config.json",
		"/Users/ryan/git/merck-mdr/com.merck.mdr.application/app/components/csi-merck-home/csi-merck-home.js",
		"/Users/ryan/git/merck-mdr/com.merck.mdr.application/app/lib/vocab/binary-store.js",
		"/Users/ryan/git/merck-mdr/com.merck.mdr.application/OSGI-INF/registry-data/everyoneRead/merck-nav-reg.trig",
		"/Users/ryan/git/merck-mdr/com.merck.mdr.application/OSGI-INF/registry-data/everyoneRead/merck-app.trig",
		"/Users/ryan/Desktop/lastpass_text_backup june 20th 2017",
		"/Users/ryan/Downloads/UTC--2017-05-16T02-53-49.466310900Z--222352f391d4aead11723ac13f5bbf823bab42a5",
		"/Users/ryan/Desktop/electrum-private-keys.json",
		"/Users/ryan/git/merck-mdr/com.merck.mdr.application/app/components/test-widget.html",
		"/Users/ryan/git/merck-mdr/com.merck.mdr.application/app/components/csi-merck-change-request-create/csi-merck-change-request-create-impl.js",
		"/Users/ryan/git/merck-mdr/com.merck.mdr.application/app/components/csi-merck-change-request-create/csi-merck-change-request-create.js",
		"/Users/ryan/git/merck-mdr/com.merck.mdr.application/app/components/csi-merck-change-request-create/csi-merck-change-request-create.html",
		"/Users/ryan/git/merck-mdr/com.merck.mdr.application/app/components/csi-merck-app/csi-merck-app.html",
		"/Users/ryan/git/merck-mdr/com.merck.mdr.application/app/components/csi-merck-metadata-maintenance-edit-form-section/csi-merck-metadata-maintenance-edit-form-section.js",
		"/Users/ryan/git/merck-mdr/com.merck.mdr.application/app/components/csi-merck-metadata-maintenance-edit-form-section/csi-merck-metadata-maintenance-edit-form-section-impl.js",
		"/Users/ryan/git/merck-mdr/com.merck.mdr.application/app/components/csi-merck-metadata-maintenance-edit-form/csi-merck-metadata-maintenance-edit-form.js",
		"/Users/ryan/git/merck-mdr/com.merck.mdr.application/app/components/csi-merck-facet-request-table-filter/csi-merck-facet-request-table-filter.html",
		"/Users/ryan/git/merck-mdr/com.merck.mdr.application/app/components/csi-merck-file-attachment/csi-merck-file-attachment.html",
		"/Users/ryan/git/merck-mdr/com.merck.mdr.application/app/components/csi-merck-app/csi-merck-app-impl.js",
		"/Users/ryan/git/merck-mdr/com.merck.mdr.application/app/js/init.js",
		"/Users/ryan/git/merck-mdr/com.merck.mdr.application/app/js/main.js",
		"/Users/ryan/git/polymer-practice2/bower_components/polymer/polymer.html",
		"/Users/ryan/git/polymer-practice2/src/not-found.html.html",
		"/Users/ryan/Library/Application Support/Sublime Text 3/Packages/HTML-CSS-JS Prettify/.jsbeautifyrc",
		"/Users/ryan/git/polymer-practice/bower.json",
		"/Users/ryan/git/polymer-practice/bower_components/polymer/README.md",
		"/Users/ryan/git/polymer-practice/elements/hello_world.html",
		"/Users/ryan/git/polymer-practice/index.html",
		"/Users/ryan/git/polymer-practice/bower_components/polymer/polymer.html",
		"/Users/ryan/git/merck-mdr/com.merck.mdr.application/bower.json",
		"/Users/ryan/Desktop/createOrUpdate.java",
		"/Users/ryan/Desktop/tasks/modelwrangler/test_queries/matt_roy.rq",
		"/Users/ryan/Desktop/dad and ryan/introduction.py",
		"/Users/ryan/Desktop/tasks/networking/disguise.sh",
		"/Users/ryan/.zshrc",
		"/Users/ryan/Desktop/tasks/modelwrangler/test_queries/jessamin_test/output1.rq",
		"/Users/ryan/git/anzo/openanzo/org.openanzo.rdf/src/org/openanzo/glitter/functions/extension/ToURI.java",
		"/Users/ryan/Desktop/tasks/modelwrangler/test_queries/jessamin_test/test_usesLinkRelationship.rq",
		"/Users/ryan/Desktop/tasks/modelwrangler/test_queries/garry.java",
		"/Users/ryan/Desktop/tasks/modelwrangler/test_queries/query.rq",
		"/Users/ryan/Desktop/tasks/modelwrangler/test_queries/test.trig",
		"/Users/ryan/Desktop/tasks/modelwrangler/test_queries/test.rq",
		"/Users/ryan/Desktop/test.rq",
		"/Users/ryan/Desktop/query-test-v2.rq",
		"/Users/ryan/Desktop/tasks/modelwrangler/test_queries/results.trig",
		"/Users/ryan/Desktop/test-construct.rq",
		"/Users/ryan/git/asdl-services/com.cambridgesemantics.anzo.asdl.services.branding/OSGI-INF/sample data/film-ont.trig",
		"/Users/ryan/git/asdl-services/com.cambridgesemantics.anzo.asdl.services.branding/components/com/cambridgesemantics/anzo/asdl/services/branding/personality/ExportPersonality.js",
		"/Users/ryan/Desktop/gcp-ssh.txt",
		"/Users/ryan/Desktop/journals/interviewbit_python/find-duplicate-in-array.py",
		"/Users/ryan/git/answerset-export/com.cambridgesemantics.anzo.answerset/components/com/cambridgesemantics/anzo/answerset/export/personality/AnswersetExportPersonality.js",
		"/Users/ryan/Desktop/export/com.cambridgesemantics.anzo.export.branding/components/com/cambridgesemantics/anzo/export/branding/personality/ExportPersonality.js",
		"/Users/ryan/Desktop/export/com.cambridgesemantics.anzo.export.branding/components/com/cambridgesemantics/anzo/export/branding/personality/GridExport.js",
		"/Users/ryan/Desktop/tasks/sparql linking /examples/construct-historical-ds.rq",
		"/Users/ryan/git/asdl-services/com.cambridgesemantics.anzo.asdl.services.branding/components/com/cambridgesemantics/anzo/asdl/services/branding/personality/GridExport.html",
		"/Users/ryan/git/lilly-sdp/com.lilly.sdp.branding/components/com/cambridgesemantics/anzo/export/branding/personality/ExportPersonality.js",
		"/Users/ryan/git/asdl-services/com.cambridgesemantics.anzo.asdl.services.branding/components/com/cambridgesemantics/anzo/asdl/services/branding/personality/GridExport.js",
		"/Users/ryan/git/asdl-services/com.cambridgesemantics.anzo.asdl.services.branding/components/com/cambridgesemantics/anzo/asdl/services/branding/personality/GridExport.css",
		"/Users/ryan/git/asdl-services/com.cambridgesemantics.anzo.asdl.services.branding/components/com/cambridgesemantics/anzo/export/branding/personality/ExportPersonality.js",
		"/Users/ryan/git/asdl-services/com.cambridgesemantics.anzo.asdl.services.branding/.project",
		"/Users/ryan/Desktop/com.lilly.sdp.branding/components/com/cambridgesemantics/anzo/export/branding/personality/ExportPersonality.js",
		"/Users/ryan/git/lilly-sdp/com.lilly.sdp.export/OSGI-INF/registry-data/export/everyoneRead/export-dataset.trig",
		"/Users/ryan/git/lilly-sdp/com.lilly.sdp.export/OSGI-INF/registry-data/export/everyoneRead/endpoint_dashboard.trig",
		"/Users/ryan/Desktop/endpoint_log.trig",
		"/Users/ryan/git/lilly-sdp/com.lilly.sdp.config.core/OSGI-INF/registry-data/sdpDataCollections.trig",
		"/Users/ryan/git/lilly-sdp/com.lilly.sdp.config.core/OSGI-INF/registry-data/registrations.trig",
		"/Users/ryan/git/export/com.cambridgesemantics.anzo.endpointexport/working/sample data/film-ld.trig",
		"/Users/ryan/git/export/com.cambridgesemantics.anzo.endpointexport/working/sample data/film-data.trig",
		"/Users/ryan/Desktop/plugins/bundleBundles_sh.sh",
		"/Users/ryan/Desktop/deployment-asdd/bundleBundles.sh",
		"/Users/ryan/Desktop/deployment-asdd/scripts/bundleBundles.sh",
		"/Users/ryan/git/lilly-sdp/com.lilly.sdp.branding/components/com/cambridgesemantics/anzo/export/branding/personality/AuditableExport.html",
		"/Users/ryan/git/lilly-sdp/com.lilly.sdp.export/OSGI-INF/registry-data/export/everyoneRead/endpoint_download_log_dash.trig",
		"/Users/ryan/git/export/com.cambridgesemantics.anzo.export.branding/components/com/cambridgesemantics/anzo/export/branding/personality/ExportPersonality.js",
		"/Users/ryan/Desktop/cool_python_script.py",
		"/Users/ryan/git/anzo/anzo/com.cambridgesemantics.anzo.licensemanager/OSGI-INF/registry-data/everyoneWrite/registries.trig",
		"/Users/ryan/git/export/com.cambridgesemantics.anzo.endpointexport/OSGI-INF/registry-data/everyoneRead/endpoint_download_log_dash.trig",
		"/Users/ryan/git/export/com.cambridgesemantics.anzo.endpointexport/OSGI-INF/registry-data/everyoneRead/endpoint-export-service-ont.trig",
		"/Users/ryan/git/export/com.cambridgesemantics.anzo.endpointexport/OSGI-INF/registry-data/everyoneRead/endpoint-export-service-ont-reg.trig",
		"/Users/ryan/Desktop/endpoint_download_log_dash.trig",
		"/Users/ryan/git/export/test_dash.trig",
		"/Users/ryan/Desktop/la-sort-master/src/html/la-sort.html",
		"/Users/ryan/git/answerset-export/com.cambridgesemantics.anzo.answerset/OSGI-INF/registry-data/ontologies/answer-set-ont.trig",
		"/Users/ryan/git/export/com.cambridgesemantics.anzo.endpointexport/OSGI-INF/registry-data/everyoneRead/export-dataset.trig",
		"/Users/ryan/git/export/com.cambridgesemantics.anzo.endpointexport/working/sample data/film-ont.trig",
		"/Users/ryan/git/export/com.cambridgesemantics.anzo.endpointexport/OSGI-INF/registry-data/everyoneRead/endpoint_dashboard.trig",
		"/Users/ryan/git/export/com.cambridgesemantics.anzo.endpointexport/working/endpoint-service-properties.trig",
		"/Users/ryan/git/bms---icdb/com.cambridgesemantics.bms.studyloading/OSGI-INF/registry-data/dashboards/request_dashboard_sys.trig",
		"/Users/ryan/git/export/com.cambridgesemantics.anzo.endpointexport/OSGI-INF/registry-data/everyoneRead/endpoint-service-properties.trig",
		"/Users/ryan/git/export/com.cambridgesemantics.anzo.endpointexport/OSGI-INF/registry-data/everyoneWrite/aow-service-reg.trig",
		"/Users/ryan/git/export/com.cambridgesemantics.anzo.export.branding/OSGI-INF/registry-data/services/export-service.trig",
		"/Users/ryan/git/export/com.cambridgesemantics.anzo.endpointexport/OSGI-INF/registry-data/everyoneRead/aow-service-ont.trig",
		"/Users/ryan/Desktop/registries_reg.trig",
		"/Users/ryan/git/export/com.cambridgesemantics.anzo.endpointexport/OSGI-INF/registry-data/everyoneRead/template.trig",
		"/Users/ryan/git/export/com.cambridgesemantics.anzo.endpointexport/OSGI-INF/registry-data/everyoneWrite/template.trig",
		"/Users/ryan/git/export/com.cambridgesemantics.anzo.endpointexport/working/request_test.trig",
		"/Users/ryan/git/bms---icdb/com.cambridgesemantics.bms.studyloading/OSGI-INF/registry-data/datasets/export-dataset.trig",
		"/Users/ryan/git/bms---icdb/com.cambridgesemantics.bms.studyloading/OSGI-INF/registry-data/datasets/central-study-dataset.trig",
		"/Users/ryan/git/bms---icdb/com.cambridgesemantics.bms.studyloading/OSGI-INF/registry-data/datasets/collection-status-stmt-test.trig",
		"/Users/ryan/Desktop/beat.txt",
		"/Users/ryan/Desktop/say.txt",
		"/Users/ryan/git/export/com.cambridgesemantics.anzo.endpointexport/working/export_configure/call.sh",
		"/Users/ryan/git/export/com.cambridgesemantics.anzo.endpointexport/working/export_configure/export_configure.sh",
		"/tmp/export_service_configuration_20170207162812.trig",
		"/Users/ryan/git/export/com.cambridgesemantics.anzo.export/working/export_configure/README.txt",
		"/tmp/export_service_configuration_20170201152712.trig",
		"/tmp/export_service_configuration_20170131170536.trig",
		"/Users/ryan/copy-deps/pom.xml",
		"/Users/ryan/Desktop/request_test.trig",
		"/tmp/export_service_configuration_20170201144102.trig"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"0x4aa217ee9d7bea1b628ce2d1e4bd28eef440e341",
			"0x4aa217Ee9d7BEa1b628Ce2D1e4bd28eEf440e341",
			"0x4aa217ee9d7bea1b628ce2d1e4bd28eef440e341",
			"btn",
			"btn btn-xl",
			".navbar-brand",
			"page",
			"metadataMappingOntologyVocab",
			"typeurivalue",
			"CHANGE_ME",
			"http://cambridgesemantics.com/Component/merck/components/csi-merck-metadata-maintenance-edit-rm1-dataset",
			"csi-select2",
			"element",
			"MyView1",
			"view404",
			"view3",
			"view2",
			"view1",
			"app-drawer",
			"my-view1",
			"platform",
			"computedClasses",
			"film",
			"           {\n               SELECT DISTINCT\n                    ?value\n                WHERE {\n                    ?value rdf:type <http://cambridgesemantics.com/ontologies/2009/08/Film#Actor>. \n                }\n           }",
			"INCLUDE %baseResources",
			"%baseResources",
			" %",
			"%baseResources",
			"WITH {\n\tSELECT DISTINCT\n\t\t?value\n\tWHERE {\n\t\t?value rdf:type <http://cambridgesemantics.com/ontologies/2009/08/Film#Actor>. \n\t}\n}",
			"%baseResources",
			"paramStructure",
			"anzowt.application.anzoConnection.normalizeDatasetInfo(queryDetails, function(queryDetails) {",
			"                                        dojo.forEach(legalCells, function(configCell, i) {\n                                            // specify the structure\n                                            var c = {\n                                                name  : anzowt.data.GridDataReadStore.getColumnName(configCell, args.structure),\n                                                'var' : configCell.id\n                                            }\n                                            var format = dojo.getObject('body.value.format', false, configCell);\n                                            if (format)\n                                                c.format = format;\n                                            structure.push(dojo.toJson(c));\n                                        }, grid);\n\n                                        dojo.mixin(params, queryDetails);",
			"                                    anzowt.formula.formulaToSPARQL({\n                                        paging       : false,\n                                        request      : request,\n                                        queryDetails : queryDetails,\n                                        pMonitor     : args.pMonitor\n                                    }, function(resp) {\n\n                                        var legalCells = args.structure.items;\n                                        var structure  = [];",
			"                                    anzowt.formula.formulaToSPARQL({\n                                        paging       : false,\n                                        request      : request,\n                                        queryDetails : queryDetails,\n                                        pMonitor     : args.pMonitor\n                                    }, function(resp) {\n\n                                        var legalCells = args.structure.items;\n                                        var structure  = [];\n\n                                        dojo.forEach(legalCells, function(configCell, i) {\n                                            // specify the structure\n                                            var c = {\n                                                name  : anzowt.data.GridDataReadStore.getColumnName(configCell, args.structure),\n                                                'var' : configCell.id\n                                            }\n                                            var format = dojo.getObject('body.value.format', false, configCell);\n                                            if (format)\n                                                c.format = format;\n                                            structure.push(dojo.toJson(c));\n                                        }, grid);\n\n                                        dojo.mixin(params, queryDetails);\n\n                                        if(queryDetails.namedDatasets && queryDetails.namedDatasets.length > 0)\n                                            params['named-dataset-uri'] = queryDetails.namedDatasets;\n                                        if(queryDetails.namedGraphs && queryDetails.namedGraphs.length > 0)\n                                            params['named-graph-uri'] = queryDetails.namedGraphs;\n                                        if(queryDetails.defaultNamedGraphs && queryDetails.defaultNamedGraphs.length > 0)\n                                            params['default-graph-uri'] = queryDetails.defaultNamedGraphs;",
			"                                        if(queryDetails.namedDatasets && queryDetails.namedDatasets.length > 0)\n                                            params['named-dataset-uri'] = queryDetails.namedDatasets;\n                                        if(queryDetails.namedGraphs && queryDetails.namedGraphs.length > 0)\n                                            params['named-graph-uri'] = queryDetails.namedGraphs;\n                                        if(queryDetails.defaultNamedGraphs && queryDetails.defaultNamedGraphs.length > 0)\n                                            params['default-graph-uri'] = queryDetails.defaultNamedGraphs;",
			"\n                                                                        anzowt.application.anzoConnection.normalizeDatasetInfo(queryDetails, function(queryDetails) {\n                                    anzowt.formula.formulaToSPARQL({\n                                        paging       : false,\n                                        request      : request,\n                                        queryDetails : queryDetails,\n                                        pMonitor     : args.pMonitor\n                                    }, function(resp) {\n\n                                        var legalCells = args.structure.items;\n                                        var structure  = [];\n\n                                        dojo.forEach(legalCells, function(configCell, i) {\n                                            // specify the structure\n                                            var c = {\n                                                name  : anzowt.data.GridDataReadStore.getColumnName(configCell, args.structure),\n                                                'var' : configCell.id\n                                            }\n                                            var format = dojo.getObject('body.value.format', false, configCell);\n                                            if (format)\n                                                c.format = format;\n                                            structure.push(dojo.toJson(c));\n                                        }, grid);\n\n                                        dojo.mixin(params, queryDetails);\n\n                                        if(queryDetails.namedDatasets && queryDetails.namedDatasets.length > 0)\n                                            params['named-dataset-uri'] = queryDetails.namedDatasets;\n                                        if(queryDetails.namedGraphs && queryDetails.namedGraphs.length > 0)\n                                            params['named-graph-uri'] = queryDetails.namedGraphs;\n                                        if(queryDetails.defaultNamedGraphs && queryDetails.defaultNamedGraphs.length > 0)\n                                            params['default-graph-uri'] = queryDetails.defaultNamedGraphs;\n",
			"answerSetExportFormats",
			"com.cambridgesemantics.anzo.asdl.services.branding.personality.GridExport",
			"ExportPersonality",
			"com.cambridgesemantics.anzo.asdl.services.branding.personality.ExportPersonality",
			"audit",
			"showMessageAuditable",
			"validateAuditDlg",
			"Studies",
			"tahoe",
			"bms",
			"answerSetExportFormats\n",
			"Answer Set",
			"AnswersetExportPersonality",
			"answerset",
			"organizationID",
			"tahoeParams",
			"enhanceRequest",
			"buildId",
			"com.openanzo",
			"ssoprovider",
			"spring",
			"anzo",
			"product",
			"sso",
			"ssoprovider1",
			"ssoprovider",
			"spring",
			"DASHBOARD_URI",
			"com.aws",
			"TestMaven",
			"B",
			"DIR",
			"\"",
			"select",
			"1234",
			"0002",
			"0001",
			"1234",
			"regex",
			"<http://cambridgesemantics.com/bms/tahoe/studies/ca/209/063/20120129/unblinded/adam/3/StudyArtifacts/LinkedDataSet>",
			"LinkedDataSet",
			"originalFormat",
			"1234",
			"Originalformat",
			"1235",
			"property_anzo.assignOwnServerID=true",
			"org.ops4j.pax.web-1461026851571-3.properties",
			"org.ops4j.pax.web-1461026010942-0.properties",
			"org.ops4j.pax.logging.readers.slf4j.properties",
			"\norg.ops4j.pax.logging.readers.slf4j.properties",
			"org.openanzo.security.ldap.LdapAuthentication.properties",
			"org.openanzo.security.KeyStore.properties",
			"org.openanzo.osgi.SystemConfig.properties",
			"org.openanzo.ldap.EmbeddedLDAPServer.properties",
			"org.openanzo.client.ClientFactory.properties",
			"org.openanzo.binarystore.Servlet.properties",
			"com.cambridgesemantics.datasource.BigdataDatasourceFactory-1461026851578-4.properties",
			"com.cambridgesemantics.anzo.licensemanager.properties",
			"com.cambridgesemantics.anzo.datasource.ldap.ProxyConnectionFactory.properties",
			"com.cambridgesemantics.anzo.config.properties",
			"com.cambridgesemantics.anzo.config.ldap.LdapManagementService.properties",
			"cacheProvider.properties",
			"1234",
			"0017",
			"0016",
			"0012",
			"0011",
			"0010",
			"0008",
			"1234",
			"0001",
			"0002",
			"0003",
			"0004",
			"0003",
			"0002",
			"0001",
			"9876",
			"7654",
			"6543",
			"4321",
			"1234",
			"StudyMetadataRevised",
			"}\n",
			"4321",
			"1234",
			"ImportString",
			".\n",
			"study",
			"bin"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "omnicoach-site.sublime-project",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 45,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "omnicoach-site.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 288.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
